<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yangtse.life.mapper.OrderorderMapper">
  <resultMap id="BaseResultMap" type="org.yangtse.life.bean.Orderorder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="buytime" jdbcType="TIMESTAMP" property="buytime" />
    <result column="buy_type" jdbcType="INTEGER" property="buyType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, type, address_id, num, status, buytime, buy_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orderorder
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orderorder
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.yangtse.life.bean.Orderorder">
    insert into orderorder (id, user_id, type, 
      address_id, num, status, 
      buytime, buy_type)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{addressId,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{buytime,jdbcType=TIMESTAMP}, #{buyType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.yangtse.life.bean.Orderorder">
    insert into orderorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="buytime != null">
        buytime,
      </if>
      <if test="buyType != null">
        buy_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="buytime != null">
        #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyType != null">
        #{buyType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.yangtse.life.bean.Orderorder">
    update orderorder
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="buytime != null">
        buytime = #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyType != null">
        buy_type = #{buyType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yangtse.life.bean.Orderorder">
    update orderorder
    set user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      buytime = #{buytime,jdbcType=TIMESTAMP},
      buy_type = #{buyType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.yangtse.life.bean.Orderorder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="buytime" jdbcType="TIMESTAMP" property="buytime" />
    <result column="buy_type" jdbcType="INTEGER" property="buyType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, type, address_id, num, status, buytime, buy_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orderorder
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orderorder
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.yangtse.life.bean.Orderorder">
    insert into orderorder (id, user_id, type, 
      address_id, num, status, 
      buytime, buy_type)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{addressId,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{buytime,jdbcType=TIMESTAMP}, #{buyType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.yangtse.life.bean.Orderorder">
    insert into orderorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="buytime != null">
        buytime,
      </if>
      <if test="buyType != null">
        buy_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="buytime != null">
        #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyType != null">
        #{buyType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.yangtse.life.bean.Orderorder">
    update orderorder
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="buytime != null">
        buytime = #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyType != null">
        buy_type = #{buyType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yangtse.life.bean.Orderorder">
    update orderorder
    set user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      buytime = #{buytime,jdbcType=TIMESTAMP},
      buy_type = #{buyType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>